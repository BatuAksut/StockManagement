@using System.Text.Json
@model IEnumerable<dynamic>

@{
    var productStockData = JsonSerializer.Deserialize<dynamic>(ViewBag.ProductStockData);
    var categoryStockData = JsonSerializer.Deserialize<dynamic>(ViewBag.CategoryStockData);
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<h3>Product Stock Chart</h3>
<canvas id="stockData1" width="400" height="200"></canvas>


<h3>Category Stock Chart</h3>
<canvas id="stockData2" width="400" height="200"></canvas>

<script>
   
    var productStockData = @Html.Raw(ViewBag.ProductStockData);
    var labels1 = productStockData.map(s => s.ProductName);
    var data1 = productStockData.map(s => s.UnitsInStock);

    var ctx1 = document.getElementById('stockData1').getContext('2d');
    new Chart(ctx1, {
        type: 'bar',
        data: {
            labels: labels1,
            datasets: [{
                label: 'Product Stocks',
                data: data1,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

   
    var categoryStockData = @Html.Raw(ViewBag.CategoryStockData);
    var labels2 = categoryStockData.map(s => s.CategoryName);
    var data2 = categoryStockData.map(s => s.TotalUnitsInStock);

    var ctx2 = document.getElementById('stockData2').getContext('2d');
    new Chart(ctx2, {
        type: 'bar',
        data: {
            labels: labels2,
            datasets: [{
                label: 'Category Stocks',
                data: data2,
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
